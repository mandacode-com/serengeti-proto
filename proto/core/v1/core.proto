syntax = "proto3";

package core.v1;

import "third_party/validate/validate.proto";

option go_package = "github.com/mandacode-com/seregeti-proto/go/core/v1;corev1";

service CoreService {
  rpc GetServices(GetServicesRequest) returns (GetServicesResponse);
  rpc GetService(GetServiceRequest) returns (GetServiceResponse);
  rpc CheckServiceActive(CheckServiceActiveRequest) returns (CheckServiceActiveResponse);
}

message Service {
  string id = 1 [(validate.rules).string = {uuid: true}]; // Unique identifier for the service
  string name = 2 [(validate.rules).string = {min_len: 1}]; // Name of the service
  string description = 3; // Description of the service
  int64 created_at = 4 [(validate.rules).int64 = {gt: 0}]; // Creation timestamp in Unix format
  int64 updated_at = 5 [(validate.rules).int64 = {gt: 0}]; // Last update timestamp in Unix format
  bool is_active = 6; // Indicates if the service is active
}

message GetServicesRequest {
  // No fields needed for this request
}

message GetServicesResponse {
  repeated Service services = 1; // List of services
}

message GetServiceRequest {
  string id = 1 [(validate.rules).string = {uuid: true}]; // Unique identifier for the service to retrieve
}

message GetServiceResponse {
  Service service = 1; // The requested service details
}

message CheckServiceActiveRequest {
  string id = 1 [(validate.rules).string = {uuid: true}]; // Unique identifier for the service to check
}

message CheckServiceActiveResponse {
  bool is_active = 1; // Indicates if the service is active
  string message = 2; // Additional message, e.g., reason for inactivity
}
